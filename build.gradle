buildscript {
	ext { springBootVersion = '1.3.0.BUILD-SNAPSHOT' }
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")  }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.7'
}

subprojects {
	apply plugin: 'groovy'
	apply plugin: 'eclipse'
	apply plugin: 'spring-boot'
	apply plugin: 'codenarc'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	codenarc {
		toolVersion = "0.24.1"
	}
	
	codenarcMain {
		configFile = rootProject.file('config/codenarc/mainRules.groovy')
	}
	
	codenarcTest {
		configFile = rootProject.file('config/codenarc/testRules.groovy')
	}
	
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}


	dependencies {
		compile "org.springframework.boot:spring-boot-starter"
		compile "org.springframework.boot:spring-boot-devtools"
		compile "org.codehaus.groovy:groovy"
		compile "org.gcontracts:gcontracts-core:1.2.12"
		testCompile "org.springframework.boot:spring-boot-starter-test"
		testCompile "org.spockframework:spock-spring"
		codenarc "org.codenarc:CodeNarc:0.24.1"
	}
	
	test.testLogging {
		exceptionFormat "full"
		showStandardStreams = true
	}
	
	eclipse {
		classpath {
			containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
			containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		}
	}
	
	jar {
		version = '0.0.1-SNAPSHOT'
	}
}